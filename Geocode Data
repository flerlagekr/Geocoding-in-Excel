Function GoogleGeocode(address As String) As String
Dim strAddress As String
Dim strQuery As String
Dim strLatitude As String
Dim strLongitude As String

strAddress = URLEncode(address)

'Assemble the query string
strQuery = "https://maps.googleapis.com/maps/api/geocode/xml?"
strQuery = strQuery & "address=" & strAddress
strQuery = strQuery & "&sensor=false"
strQuery = strQuery & "&key=<Enter Your Key Here>"

'define XML and HTTP components
Dim googleResult As New MSXML2.DOMDocument
Dim googleService As New MSXML2.XMLHTTP
Dim oNodes As MSXML2.IXMLDOMNodeList
Dim oNode As MSXML2.IXMLDOMNode

'create HTTP request to query URL - make sure to have
'that last "False" there for synchronous operation
googleService.Open "GET", strQuery, False
googleService.send
googleResult.LoadXML (googleService.responseText)

Set oNodes = googleResult.getElementsByTagName("geometry")
DoEvents
If oNodes.Length = 1 Then
For Each oNode In oNodes
  strLatitude = oNode.ChildNodes(0).ChildNodes(0).Text
  strLongitude = oNode.ChildNodes(0).ChildNodes(1).Text
  GoogleGeocode = strLatitude & "," & strLongitude
  DoEvents
 Next oNode
 Else
    ' Some error occured. What is it?
    Dim intPos As Integer, intPos2 As Integer, strError As String
    intPos = InStr(1, googleService.responseText, "<error_message>")
    intPos2 = InStr(1, googleService.responseText, "</error_message>")
    If intPos > 0 And intPos2 > intPos Then
        strError = Mid(googleService.responseText, intPos + 15, intPos2 - intPos - 15)
    Else
        strError = "UNKNOWN ERROR OCCURRED"
    End If
    
    GoogleGeocode = strError
 End If
 
 Set googleService = Nothing
 Set googleResult = Nothing
 Set oNodes = Nothing
 Set oNode = Nothing
End Function

Public Function URLEncode(StringVal As String, Optional SpaceAsPlus As Boolean = False) As String
Dim StringLen As Long: StringLen = Len(StringVal)

If StringLen > 0 Then
ReDim Result(StringLen) As String
Dim i As Long, CharCode As Integer
Dim Char As String, Space As String

If SpaceAsPlus Then Space = "+" Else Space = "%20"

For i = 1 To StringLen
  Char = Mid$(StringVal, i, 1)
  CharCode = Asc(Char)

  Select Case CharCode
  Case 97 To 122, 65 To 90, 48 To 57, 45, 46, 95, 126
    Result(i) = Char
  Case 32
    Result(i) = Space
  Case 0 To 15
    Result(i) = "%0" & Hex(CharCode)
  Case Else
    Result(i) = "%" & Hex(CharCode)
  End Select
Next i
URLEncode = Join(Result, "")
End If
End Function
